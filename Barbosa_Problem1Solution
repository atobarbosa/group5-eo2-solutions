def median(numbers):
    sorted_numbers = sorted(numbers)
    n = len(sorted_numbers)
    middle = n // 2

    if n % 2 == 0:
        return (sorted_numbers[middle - 1] + sorted_numbers[middle]) / 2
    else:
        return sorted_numbers[middle]


def mode(numbers):
    frequency = {}
    for number in numbers:
        if number in frequency:
            frequency[number] += 1
        else:
            frequency[number] = 1
    most_frequent = max(frequency.values())
    modes = [key for key, value in frequency.items() if value == most_frequent]

    if len(modes) == 1:
        return modes[0]
    else:
        return modes  # In case of a tie, return all modes


def mean(numbers):
    return sum(numbers) / len(numbers)


if __name__ == "__main__":
    numbers = [43, 45, 69, 420, 24, 8, 62]
    
    print("Numbers:", numbers)
    print("Median:", median(numbers))
    print("Mode:", mode(numbers))
    print("Mean:", mean(numbers))
